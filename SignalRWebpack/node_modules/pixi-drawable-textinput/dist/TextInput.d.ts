import * as PIXI from 'pixi.js';
import { InputOption } from './TextInput/InputOption';
export { InputOption } from './TextInput/InputOption';
export { InputCursorStyle } from './TextInput/InputCursorStyle';
export { InputFontStyle } from './TextInput/InputFontStyle';
export { InputColor } from './TextInput/InputColor';
export declare class TextInput extends PIXI.Container {
    options: InputOption;
    private textComponent;
    private backgroundComponent;
    private backgroundComponentFocus;
    private cursorComponentBlind;
    private cursorComponentLow;
    private isFocus;
    private cursorPosition;
    private cursorWorldPosition;
    private blindStatus;
    private keyDownEventRef;
    private blurEventRef;
    private interval;
    private lastComponentHeight;
    constructor(options: InputOption);
    private GenerateValueDisplay;
    private DrawCursor;
    private DrawBackground;
    private DrawText;
    redraw(): void;
    private OnKeyDown;
    private addStringIntoStringAt;
    private replaceCharIntoStringAt;
    useKeyboardPosition(keyCode: number): void;
    changeCursorPosition(position: number): boolean;
    fireTextChange(lastValue: string, newValue: string, cursorPosition: number): void;
    calculateValueMetrics(): PIXI.TextMetrics;
    private calculateCursorPosition;
    private calculateCursorLocation;
    private displayCursor;
    private cursorTimerEvent;
    private displayBackground;
    private AddEvent;
    private RemoveEvent;
    focus(): void;
    blur(): void;
}
export default TextInput;
